# Generated by sila2.code_generator; sila2.__version__: 0.10.4
from __future__ import annotations

from typing import TYPE_CHECKING

import socketio.server
from sila2.server import MetadataDict

from ..generated.ursilainterface import SayHello_Responses, UrSilaInterfaceBase


if TYPE_CHECKING:
    from ..server import Server
import socketio

class UrSilaInterfaceImpl(UrSilaInterfaceBase):
    def __init__(self, parent_server: Server, socketIoServer: socketio) -> None:
        super().__init__(parent_server=parent_server)
        self.mSocketIoServer = socketIoServer

    def get_StartYear(self, *, metadata: MetadataDict) -> int:
        raise NotImplementedError  # TODO

    def SayHello(self, Name: str, *, metadata: MetadataDict) -> SayHello_Responses:
        try:
            #socketio.Client.server.Server.
            connect_response = self.mSocketIoServer.emit('send_command_to_sec_node_ur_server', {'who': 'WEB UI', 'cmd': Name})
            print("******************************************            mSocketIoServer: {}".format(self.mSocketIoServer))
            print("******************************************            response: {}".format(connect_response))
        except:
            print("App Client:{}" .format(self.mSocketIoServer))
            print("###################################################################################################")

        return SayHello_Responses("invoker with command send \"running\" triggered")
